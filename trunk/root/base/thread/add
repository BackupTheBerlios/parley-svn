<div style="margin-top:10px;"></div>
<div class="thread_header">
    <a href="forum/view?forum=[% current_forum.id %]">[% current_forum.name %]</a>
    &nbsp;:&nbsp;
    [%l('Start A New Topic')%]
</div>

[% IF view.error.message %]
    [% view.error.message %]
    <ul>
        [% FOREACH message IN view.error.messages %]
            <li>[% message %]</li>
        [% END %]
    </ul>
[% END %]

<form action="thread/add?forum=[% current_forum.id %]" method="POST" name="new_thread">
    <table class="thread_add" border="0">
        <tr>
            <td class="thread_add_topic"> [%l('Topic')%] </td>
            <td>
            <input type="text" name="thread_subject" size="60" class="input_text" />
            </td>
        </tr>

        <tr>
            <td class="thread_add_message"> [%l('Message')%] </td>
            <td>
                <textarea name="thread_message" id="thread_message" cols="60" rows="20" class="input_text" /></textarea>
            </td>
        </tr>

        <tr>
            <td colspan="2" style="text-align: center;">
            <input type="button" value="[%l('Preview')%]" name="post_reply" class="" id="message_preview" />
            <input type="submit" value="[%l('Post New Topic')%]" name="post_reply" class="" />
            </td>
        </tr>

        <tr>
            <td colspan="2" align="right">
                <input type="checkbox" name="watch_on_post" value="1" [% IF authed_user.preference.watch_on_post %]checked="checked" [% END %]/>
                [%l('ADD THREAD WATCH')%] 
            </td>
        </tr>
    </table>
</form>

[% IF 0 %]
<form action="thread/add?forum=[% current_forum.id %]" method="POST" name="new_thread">
    <table border="1">
    <tr>
        <td> [%l('Topic')%] </td>
        <td>
        <input type="text" name="thread_subject" size="60" class="input_text" />
        </td>
    </tr>

    <tr>
        <td> [%l('Message')%] </td>
        <td>
            <textarea name="thread_message" id="old_thread_message" cols="60" rows="20" class="input_text" /></textarea>
        </td>
    </tr>

    <tr>
        <td colspan="2" style="text-align: center;">
        <input type="button" value="[%l('Preview')%]"        name="post_reply" class="input_button" id="message_preview" />
        <input type="submit" value="[%l('Post New Topic')%]" name="post_reply" class="input_button" />
        </td>
    </tr>

    <tr>
        <td colspan="2" align="right">
            <input type="checkbox" name="watch_on_post" value="1" [% IF authed_user.preference.watch_on_post %]checked="checked" [% END %]/>
            [%l('ADD THREAD WATCH')%] 
        </td>
    </tr>
    </table>
</form>
[% END %]

<style type="text/css">
	.yui-overlay { position:absolute;background:transparent;border:none;padding:none;margin:none; }
</style>

<!-- message preview majick -->
<script type="text/javascript">
    (function () {
        ParleyMessagePreview = function() {
            var Dom         = YAHOO.util.Dom,
                YU          = YAHOO.util;

            this.config = {
                trigger     : 'message_preview',
                user_input  : 'thread_message',
                container   : 'message_container',
                trigger_evt : 'click'
            };
            this.message_source  = false;
            this.message_preview = false;

            this.handleSuccess = function(o) {
                var data = eval('(' + o.responseText + ')');
                var obj = o.argument.obj;

                if (data.formatted) {
                    obj.previewElId = YU.Dom.generateId();

                    obj.user_input.style.visibility     = 'hidden';

                    /* create a panel to show the preview in */
                    var pWidth          = obj.user_input.clientWidth,
                        pHeight         = obj.user_input.clientHeight,
                        pLeft           = obj.user_input.offsetLeft,
                        pTop            = obj.user_input.offsetTop;

                    obj.preview_overlay = new YAHOO.widget.Overlay(
                        "preview_overlay",
                        {
                            context:        [obj.config.user_input, 'tl', 'tl'],
                            visible:        true,
                            width:          obj.user_input.clientWidth  + 'px',
                            height:         obj.user_input.clientHeight + 'px'
                        }
                    );

                    obj.preview_overlay.setBody(data.formatted);
                    obj.preview_overlay.render(document.body);
                    Dom.get('preview_overlay').style.overflow = 'auto';


                    // update the button
                    obj.trigger.value = '[%l('Edit')%]';

                    YU.Event.removeListener( obj.trigger, 'click' );
                    YU.Event.addListener(
                        obj.trigger,
                        obj.config.trigger_evt,
                        obj.edit,
                        obj,
                        true
                    );

                }
            };
            this.handleFailure = function(o) {
                console.log('failure');
            };

            this.edit = function() {
                // update the button
                this.trigger.value = '[%l('Preview')%]';

                this.user_input.style.visibility     = 'visible';
                this.preview_overlay.destroy();

                YU.Event.removeListener( this.trigger, 'click' );
                YU.Event.addListener(
                    this.trigger,
                    this.config.trigger_evt,
                    this.preview,
                    this,
                    true
                );
            };

            this.preview = function() {
                var request = YU.Connect.asyncRequest(
                    'POST',
                    '[%base%]post/preview',
                    {
                        success: this.handleSuccess,
                        failure: this.handleFailure,
                        argument: {
                            obj: this
                        }
                    },
                    'msg_source=' + escape(this.user_input.value)
                );
            };

            this.init = function() {
                this.container  = Dom.get( this.config.container );
                this.user_input = Dom.get( this.config.user_input );
                this.trigger    = Dom.get( this.config.trigger );

                YU.Event.addListener(
                    this.trigger,
                    this.config.trigger_evt,
                    this.preview,
                    this,
                    true
                );
            };
        };
    })();

    var MessagePreview = new ParleyMessagePreview();
    MessagePreview.init();
</script>
<!-- (end) message preview majick -->
